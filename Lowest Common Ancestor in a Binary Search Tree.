Lowest Common Ancestor in a Binary Search Tree.

class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data = data;
		this.left=null;
		this.right=null;
	}
}
public class BST 
{
	static Node root;
	static Node answer(Node root,int i,int j)
	{
		if(root==null)
			return null;
		if(root.data>i && root.data>j)
		{
			answer(root.left,i,j);
		}
		else if(root.data<i && root.data<j)
		{
			answer(root.right,i,j);
		}
		return root;
	}
	public static void main(String[] args) 
	{
		BST tree = new BST(); 
        tree.root = new Node(20); 
        tree.root.left = new Node(8); 
        tree.root.right = new Node(22); 
        tree.root.left.left = new Node(4); 
        tree.root.left.right = new Node(12); 
        tree.root.left.right.left = new Node(10); 
        tree.root.left.right.right = new Node(14);
        int n1 = 10, n2 = 14; 
        Node t = tree.answer(tree.root, n1, n2); 
        System.out.println("LCA of " + n1 + " and " + n2 + " is " + t.data);
	}
}
