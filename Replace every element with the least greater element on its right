//Replace every element with the least greater element on its right

Time Complexity O(n^2)

import java.util.Arrays;
import java.util.HashMap;
import java.util.Stack;

class Node {
	int data;
	Node left;
	Node right;

	public Node(int data) {
		this.data = data;
		this.left = null;
		this.right = null;
	}
}

public class Practice {

	static Node root = null;
	static Node suc = null;

	public static Node insert(Node root, int data) {

		if (root == null) {
			return new Node(data);
		}

		if (data > root.data) {
			root.right = insert(root.right, data);
		}

		if (data < root.data) {
			suc = root;

			root.left = insert(root.left, data);
		}

		return root;
	}

	public static void replace(int arr[]) {

		for (int i = arr.length - 1; i >= 0; i--) {
			suc = null;
			root = insert(root, arr[i]);

			if (suc != null) {
				arr[i] = suc.data;
			} else {
				arr[i] = -1;
			}
		}

	}

	public static void main(String[] args) {
		
		int arr[] = new int[] { 8, 58, 71, 18, 31, 32, 63, 92, 43, 3, 91, 93, 25, 80, 28 };
		int n = arr.length;

		replace(arr);

		for (int i = 0; i < n; i++)
			System.out.print(arr[i] + " ");
	}
}
