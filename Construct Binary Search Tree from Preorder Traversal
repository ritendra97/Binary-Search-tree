/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    class Index
    {
        int ind;
    }
    public TreeNode bstFromPreorderUtil(int[] preorder,int start,int end) {
        if(start>end)
            return null;
        
        TreeNode root =  new TreeNode(preorder[start]);
        int tr = start+1;
        while(tr<preorder.length && preorder[tr]<=preorder[start])
            tr++;
        
        root.left = bstFromPreorderUtil(preorder,start+1,tr-1);
        root.right = bstFromPreorderUtil(preorder,tr,end);
        return root;
    }
    public TreeNode bstFromPreorder(int[] preorder) {
        return bstFromPreorderUtil(preorder,0,preorder.length-1) ;
    }
}
